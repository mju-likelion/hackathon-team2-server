// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Store {
  storeId          String             @id @default(uuid())
  localName        String
  placeName        String
  createdAt        DateTime           @default(now()) @db.Date
  updatedAt        DateTime           @updatedAt
  deletedAt        DateTime?
  StoreLocation    StoreLocation[]
  StoreAddress     StoreAddress[]
  StoreCategory    StoreCategory[]
  StoreInformation StoreInformation[]
}

model StoreLocation {
  storeLocationId String    @id @default(uuid())
  latitude        String
  longitude       String
  fullAddress     String
  roadNameAddress String
  createdAt       DateTime  @default(now()) @db.Date
  updatedAt       DateTime  @updatedAt
  deletedAt       DateTime?
  storeId         Store     @relation(references: [storeId], fields: [storeLocationId])
}

model StoreAddress {
  storeAddressId  String    @id @default(uuid())
  fullAddress     String
  firstAddress    String
  secondAddress   String
  thirdAddress    String
  streetAddress   String
  roadNameAddress String
  zipCode         String?
  createdAt       DateTime  @default(now()) @db.Date
  updatedAt       DateTime  @updatedAt
  deletedAt       DateTime?
  storeId         Store     @relation(references: [storeId], fields: [storeAddressId])
}

model StoreCategory {
  storeCategoryId String    @id @default(uuid())
  categoryDetail  String?
  code            String?
  createdAt       DateTime  @default(now()) @db.Date
  updatedAt       DateTime  @updatedAt
  deletedAt       DateTime?
  storeId         Store     @relation(references: [storeId], fields: [storeCategoryId])
}

model StoreInformation {
  storeInformationId String    @id @default(uuid())
  phoneNumber        String?
  category           String?
  BCStore            String?
  registeredAt       String?
  createdAt          DateTime  @default(now()) @db.Date
  updatedAt          DateTime  @updatedAt
  deletedAt          DateTime?
  storeId            Store     @relation(references: [storeId], fields: [storeInformationId])
}
